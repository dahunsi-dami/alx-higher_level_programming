1. Module that prints list in ascending order.
==============================================

How to use ``MyList`` class
---------------------------

Import module and the function in the module:
>>> MyList = __import__("1-my_list").MyList

Create instance of my list:
>>> my_list = MyList()

Add elements to the list:
>>> my_list.append(4)
>>> my_list.append(6)
>>> my_list.append(1)
>>> my_list.append(9)
>>> my_list.append(8)
>>> my_list.append(7)

Print my_list to see list:
>>> print(my_list)
[4, 6, 1, 9, 8, 7]

Check if print_sorted method sorts list:
>>> my_list.print_sorted()
[1, 4, 6, 7, 8, 9]

Check that my_list is a list:
>>> isinstance(my_list, list)
True

Create another instance of MyList:
>>> s_list = MyList()

Add elements to s_list:
>>> s_list.append(7)
>>> s_list.append("string")
>>> s_list.append(2)
>>> s_list.append(5)

Check to see if s_list is printed:
>>> print(s_list)
[7, 'string', 2, 5]

Check if list with non-int element is sorted:
>>> s_list.print_sorted()
Traceback (most recent call last):
	...
TypeError: '<' not supported between instances of 'str' and 'int'

Create empty instance of MyList:
>>> e_list = MyList()

Send empty list to print_sorted:
>>> e_list.print_sorted()
[]

Add negative and positive elements to e_list:
>>> e_list.append(3)
>>> e_list.append(-1)
>>> e_list.append(5)
>>> e_list.append(2)
>>> e_list.append(0)

Pass e_list with negative and positive int to print_sorted:
>>> e_list.print_sorted()
[-1, 0, 2, 3, 5]

Collect returned list to a variable:
>>> r_list = e_list.print_sorted()
[-1, 0, 2, 3, 5]

Check if print_sorted returns a new list or not:
>>> id(r_list) == id(e_list)
False
